@phdthesis{ortiz2024factored,
  TITLE= {Factored Task and Motion Planning with Combined Optimization, Sampling and Learning},
  author = {Joaquim Ortiz-Haro},
  PDF={/assets/phd_thesis.pdf},
  slides={/assets/phd_slides.pdf},
  booktitle={TU-Berlin},
  year={2024},
  abstract={
Modern robots excel at performing simple and repetitive tasks in controlled environments; however, future applications, such as robotic construction and assistance, will require long-term planning of physical interactions.

These problems can be formulated as Task and Motion Planning (TAMP). 
The goal is to find how the robot should move to solve complex tasks requiring multiple interactions with objects in the environment, such as building furniture or cleaning and organizing the kitchen. However, TAMP is notoriously difficult to solve because it involves a tight combination of task planning and motion planning, considering geometric and physical constraints.

In this thesis, we aim to improve the performance of TAMP algorithms from three complementary perspectives.
First, we investigate the integration of discrete task planning with continuous trajectory optimization.
Our main contribution is a conflict-based solver that automatically discovers why a task plan might fail when considering the constraints of the physical world.
This information is then fed back into the task planner, resulting in an efficient, bidirectional, and intuitive interface between task and motion, capable of solving TAMP problems with multiple objects, robots, and tight physical constraints.

Traditionally, there have been two competing approaches to solving TAMP problems: sample-based and optimization-based methods.
In the second part, we first illustrate that, given the wide range of tasks and environments within TAMP, neither sampling nor optimization is superior in all settings.
To combine the strengths of both approaches, we have designed meta-solvers for TAMP, adaptive solvers that automatically select which algorithms and computations to use and how to best decompose each problem to find a solution faster.

A third promising direction to improve TAMP algorithms is to learn from previous solutions to similar problems.
In the third part, we combine deep learning architectures with model-based reasoning to accelerate computations within our TAMP solver.
Specifically, we target infeasibility detection and nonlinear optimization, focusing on generalization, accuracy, compute time, and data efficiency.

At the core of our contributions is a refined, factored representation of the trajectory optimization problems inside TAMP.
This structure not only facilitates more efficient planning, encoding of geometric infeasibility, and meta-reasoning but also provides better generalization in neural architectures.
}

}
